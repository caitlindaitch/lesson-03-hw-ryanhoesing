/*
Project Name: Relaxr Blog
Client: Relaxr
Author: Ryan Hoesing
Developer @GA in NYC
*/

/*

Awesome job! The page looks great, it's a spot-on replica of the comp you were given.

I just did some cleanup of the spacing on the page; make sure that you are consistently putting one space between each class and there are no errant spaces inside the brackets. Also, if you aren't using the titles like the Additional Styles section at the bottom, be sure to remove it. Having clean and readable code becomes more important as your files get larger and more complex.

- Make sure you fully understand the use case of a clearfix. You only need it when you need an element to clear it's children elements so they are displayed below and are not overlapping. You are using it in a lot of places that don't need it.
- Reuse CSS classes whenever possible. If you have a similar hover state for all of your links, create one class to share between them so you don't have duplicated code

*/

/******************************************
/* SETUP
/*******************************************/

/* Box Model Hack */
* {
  box-sizing: border-box;
}

/* Clear fix hack */
.clearfix:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.clear {
  clear: both;
}

.alignright {
  float: right;
  padding: 0 0 10px 10px; /* note the padding around a right floated image */
}

.alignleft {
  float: left;
  padding: 0 10px 10px 0; /* note the padding around a left floated image */
}

/******************************************
/* BASE STYLES
/*******************************************/

body {
  color: #000;
  font-size: 12px;
  line-height: 1.4;
  font-family: 'Open Sans', sans-serif;
}

/******************************************
/* LAYOUT
/*******************************************/

/* Center the container */
#container {
  width: 1060px;
  margin: auto;
  background-color: #f0efef;
}

/* We typically recommend using classes instead of IDs for CSS. You will be using IDs for JavaScript, but in order to be able to reuse the styles you're creating you want the flexibility of classes (you can only use one ID per page)*/

header {
  background-color: #033048;
  width: 100%;
  height:100px;
  margin: 0;
  padding: 10px 0 0 0;
}

.header-logo {
  float: left;
  font-size: 34px;
  font-weight: 800;
  color: white;
  margin: 0 0 0 50px;
  padding-top: 1%;
}

.site-nav {
  float: right;
  padding: 20px;
  margin: 0 50px 0 0;
}

.site-nav li {
  display: inline;
  text-decoration: none;
  color: #f9e42e;
  font-size: 24px;
  font-weight: 600;
  margin: 0 50px 20px 0;
  /* You can't add margin or padding to an element that you've set as display: inline; if you want it to be inline while also being able to add padding and margin, you need to use display: inline-block */
}
.site-nav a{
  text-decoration: none;
  color: #f9e42e;
}

.site-nav a:hover{
  color: white;
}

.blog{
  width: 700px;
  float: left;
  margin: 40px 0 10px 50px;
}

h2{
  font-size: 40px;
  font-weight: 600;
  color: #033048;
  line-height: 1.25;
  margin-bottom: 10px;
}

p{
  font-size: 24px;
  font-weight: 300;
  color: #606161;
  line-height: 1.25;
}

.blog-content{
  padding: 20px 0 20px 0;
}

p.blog-content:first-letter {
  float: left;
  color: #606161;
  font-family: 'Open Sans', sans-serif;
  font-weight: 600;
  font-size: 75px;
  line-height: 1;
  margin-right: 5px;
}

/* AWESOME job using the first-letter pseudo selector! Good job with specificity */

.readmore{
  float: right;
  font-size: 24px;
  font-weight: 600;
  color: #033048;
  margin: 20px 0;
}

.readmore a{
  color: #033048;
  text-decoration: none;
}

.readmore a:hover{
  background-color: #f9e42e;
}

hr {
  color: #033048;
  margin: 20px;
  width: 100%;
}

.sidebar{
  width: 240px;
  float: left;
  margin: 40px 50px 20px 20px;
}

.sidebar-nav a{
  color: #033048;
  text-decoration: none;
  font-weight: lighter;
  font-size: 24px;
}

.sidebar-nav a:hover{
  background-color: #f9e42e;
}

h3 {
  font-size: 32px;
  font-weight: 800;
  color: #033048
}

.sidebar-nav{
  margin: 0 0 10px 0;
}

.about{
  font-size: 22px;
  font-weight: 300;
  color: #033048;
  margin-bottom: 10px;
}

.learn-more{
  font-size: 22px;
  font-weight: 600;
  color: #033048;
  margin-bottom: 20px;
}

.learn-more a{
  color: #033048;
  text-decoration: none;
}

.learn-more a:hover{
  background-color: #f9e42e;
}

/* It looks like you're repeating the same style as the other a:hover styles that you've defined above. Why not reuse the styles and remove the repeated code? It's always better to reuse and avoid clutter! */

.signup{
  background-color: #f9e42e;
  padding: 3%;
  clear:both;
}

.signup p{
  text-align: center;
  font-size: 12px;
  font-family: "Open Sans", sans-serif;
  font-weight: 800;
  color: white;
  border-radius: 5px;
  background-color: #033048;
  width: 150px;
  position: center; /* Do you mean text-align center? Position is used for absolute or fixed positioning */
  padding: 1%;
  margin: 0 auto;
  display: block;
}

.signup a{
  text-decoration: none;
  color: white
}

.signup a:hover{
  text-decoration: underline;
}

footer {
    background-color: #121212;
    text-align: center;
    margin: 0 auto;
    padding: 1%;
}

.footer-logo {
  font-size: 24px;
  font-family: "Open Sans", sans-serif;
  font-weight: 800;
  color: #f9e42e;
  text-align: center;
  padding-top: 20px;
}

footer img{
  margin: 1% 1% 2% 1%;
}


footer h4{
  font-size: 14px;
  font-weight: 600;
  color: white;
  margin-bottom: 20px;
}


/******************************************
/* ADDITIONAL STYLES
/*******************************************/
